import numpy as np
import matplotlib.pyplot as plt

def f(x):
    return np.sin(x) + 0.1 * x ** 2


def df(x):
    return np.cos(x) + 0.2 * x

from scipy.optimize import minimize

res = minimize(f, x0=-1.0)
true_min_x = res.x[0]
true_min_y = f(true_min_x)

def gradientDescend(func=f, diffFunc=df, x0=3.0, speed=0.1, epochs=100, tolerance=1e-6):
    xlist = []
    ylist = []
    x = x0

    for _ in range(epochs):
        grad = diffFunc(x)
        x_new = x - speed * grad

        if abs(x_new - x) < tolerance:
            break

        x = x_new
        xlist.append(x)
        ylist.append(func(x))

    return xlist, ylist

xlist, ylist = gradientDescend(speed=0.1, epochs=500)

x_vals = np.linspace(-5, 5, 400)
y_vals = f(x_vals)

plt.figure(figsize=(12, 7))
plt.plot(x_vals, y_vals, label='Функция: sin(x) + 0.1x²', color='blue', linewidth=2)
plt.scatter(xlist, ylist, color='red', s=50, label='Точки градиентного спуска')
plt.scatter([true_min_x], [true_min_y], color='green', marker='*', s=300,
            label=f'Истинный минимум ({true_min_x:.4f}, {true_min_y:.4f})')

plt.xlabel('x', fontsize=12)
plt.ylabel('f(x)', fontsize=12)
plt.title('Метод градиентного спуска с улучшенной сходимостью', fontsize=14)
plt.legend(fontsize=12)
plt.grid(True)
plt.show()

final_x = xlist[-1]
print(f"Начальная точка: 3.0")
print(f"Финальная точка: {final_x:.6f}")
print(f"Истинный минимум: {true_min_x:.6f}")
print(f"Разница: {abs(final_x - true_min_x):.6f}")
print(f"Значение функции в финальной точке: {f(final_x):.6f}")
print(f"Значение в минимуме: {true_min_y:.6f}")

def find_critical_speed():
    speeds = np.linspace(0.01, 0.5, 50)
    conv_speeds = []
    div_speeds = []

    for speed in speeds:
        xlist, _ = gradientDescend(speed=speed, epochs=1000)
        final_x = xlist[-1]
        if abs(final_x - true_min_x) < 0.1:
            conv_speeds.append(speed)
        else:
            div_speeds.append(speed)

    critical = max(conv_speeds) if conv_speeds else 0
    return critical


critical_speed = find_critical_speed()
print(f"\nКритическая скорость обучения: {critical_speed:.4f}")
